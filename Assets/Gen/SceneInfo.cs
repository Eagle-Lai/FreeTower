//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class SceneInfo :  Bright.Config.BeanBase 
{
    public SceneInfo(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { var __json0 = _json["RoundList"]; if(!__json0.IsArray) { throw new SerializationException(); } RoundList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  RoundList.Add(__v0); }   }
        { var _json2 = _json["CameraPosition"]; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  CameraPosition = new UnityEngine.Vector3(__x, __y,__z); }
        { var _json2 = _json["CameraRotration"]; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  CameraRotration = new UnityEngine.Vector3(__x, __y,__z); }
        { if(!_json["MapName"].IsString) { throw new SerializationException(); }  MapName = _json["MapName"]; }
        { var _json2 = _json["EenemyPosition"]; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  EenemyPosition = new UnityEngine.Vector3(__x, __y,__z); }
        { var _json2 = _json["MapPosition"]; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  MapPosition = new UnityEngine.Vector3(__x, __y,__z); }
        PostInit();
    }

    public SceneInfo(int id, System.Collections.Generic.List<int> RoundList, UnityEngine.Vector3 CameraPosition, UnityEngine.Vector3 CameraRotration, string MapName, UnityEngine.Vector3 EenemyPosition, UnityEngine.Vector3 MapPosition ) 
    {
        this.Id = id;
        this.RoundList = RoundList;
        this.CameraPosition = CameraPosition;
        this.CameraRotration = CameraRotration;
        this.MapName = MapName;
        this.EenemyPosition = EenemyPosition;
        this.MapPosition = MapPosition;
        PostInit();
    }

    public static SceneInfo DeserializeSceneInfo(JSONNode _json)
    {
        return new SceneInfo(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 场次序号
    /// </summary>
    public System.Collections.Generic.List<int> RoundList { get; private set; }
    /// <summary>
    /// 摄像机位置
    /// </summary>
    public UnityEngine.Vector3 CameraPosition { get; private set; }
    /// <summary>
    /// 摄像机旋转
    /// </summary>
    public UnityEngine.Vector3 CameraRotration { get; private set; }
    /// <summary>
    /// 地图名字
    /// </summary>
    public string MapName { get; private set; }
    /// <summary>
    /// 敌人生成位置
    /// </summary>
    public UnityEngine.Vector3 EenemyPosition { get; private set; }
    /// <summary>
    /// 地图位置
    /// </summary>
    public UnityEngine.Vector3 MapPosition { get; private set; }

    public const int __ID__ = -561976518;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "RoundList:" + Bright.Common.StringUtil.CollectionToString(RoundList) + ","
        + "CameraPosition:" + CameraPosition + ","
        + "CameraRotration:" + CameraRotration + ","
        + "MapName:" + MapName + ","
        + "EenemyPosition:" + EenemyPosition + ","
        + "MapPosition:" + MapPosition + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
