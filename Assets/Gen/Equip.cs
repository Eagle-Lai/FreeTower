//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class Equip :  Bright.Config.BeanBase 
{
    public Equip(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["color"].IsNumber) { throw new SerializationException(); }  Color = (Color)_json["color"].AsInt; }
        { if(!_json["position"].IsNumber) { throw new SerializationException(); }  Position = (EquipPosition)_json["position"].AsInt; }
        { if(!_json["attack"].IsNumber) { throw new SerializationException(); }  Attack = _json["attack"]; }
        { if(!_json["defence"].IsNumber) { throw new SerializationException(); }  Defence = _json["defence"]; }
        PostInit();
    }

    public Equip(int id, Color color, EquipPosition position, int attack, int defence ) 
    {
        this.Id = id;
        this.Color = color;
        this.Position = position;
        this.Attack = attack;
        this.Defence = defence;
        PostInit();
    }

    public static Equip DeserializeEquip(JSONNode _json)
    {
        return new Equip(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 颜色
    /// </summary>
    public Color Color { get; private set; }
    /// <summary>
    ///  装备位置
    /// </summary>
    public EquipPosition Position { get; private set; }
    /// <summary>
    /// 攻击力
    /// </summary>
    public int Attack { get; private set; }
    /// <summary>
    /// 防御力
    /// </summary>
    public int Defence { get; private set; }

    public const int __ID__ = 67205136;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Color:" + Color + ","
        + "Position:" + Position + ","
        + "BulletAttack:" + Attack + ","
        + "Defence:" + Defence + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
